<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CodingProblems.WebApi</name>
    </assembly>
    <members>
        <member name="M:CodingProblems.WebApi.Controllers.ArraysController.TwoSum(System.Int32[],System.Int32)">
            <summary>
            Given an array A and a integer B. A pair(i,j) in the array is a good pair if i!=j and (A[i]+A[j]==B). 
            Check if any good pair exist or not.
            </summary>
            <returns>1 if good pair exists and 0 if not.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.ArraysController.RotateRight(System.Int32[],System.Int32)">
            <summary>
            You are given an integer array A and an integer B. 
            You have to print the same array after rotating it B times towards right.
            </summary>
            <returns>Array after rotations</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.ArraysController.RotateLeft(System.Int32[],System.Int32)">
            <summary>
            You are given an integer array A and an integer B. You have to print the same array after rotating it B times towards Left.
            </summary>
            <returns>Array after rotations</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.ArraysController.ChristmasTreesCost(System.Int32[],System.Int32[])">
            <summary>
            Given an array A consisting of heights of Christmas trees and 
            array B of the same size consisting of the cost of each of the trees.
            Return an integer denoting the minimum cost of choosing 3 trees 
            whose heights are strictly in increasing order, if not possible, -1.
            </summary>
            <returns>number of operation required if possible and -1 if not.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.ArraysController.LongestConsecutiveOnes(System.String)">
            <summary>
            Given a binary string A. It is allowed to do at most one swap between any 0 and 1.
            </summary>
            <returns>Return the length of the longest consecutive 1â€™s that can be achieved.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.ArraysController.MaximumPositivity(System.Collections.Generic.List{System.Int32})">
            <summary>
            Given an array of integers A, of size N.maximum size subarray of A having only non-negative elements.
            </summary>
            <returns>Return the maximum size subarray of A having only non-negative elements.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.CarryForwardController.SubsequencesAG(System.String)">
            <summary>
            In a string A having Uppercase letters.
            You have to find that how many times subsequence "AG" is there in the given string.
            </summary>
            <returns>Return an integer denoting the number of subsequences modulo 109 + 7.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.CarryForwardController.ClosestMinMax(System.Int32[])">
            <summary>
            Given an array A. Find the size of the smallest subarray with
            atleast one occurrence of the maximum value 
            and the minimum value of the array.
            </summary>
            <returns>Return length of the smallest subarray which has 
            atleast one occurrence of minimum and maximum element of the array.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.CarryForwardController.SwitchBulbs(System.Int32[])">
            <summary>
            Given an initial state of all bulbs, 
            find the minimum number of switches you have to press to turn on all the bulbs
            </summary>
            <returns>integer representing the minimum number of switches required.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.CarryForwardController.AmazingSubarrays(System.String)">
            <summary>
            find all the amazing substrings of S.
            Amazing Substring is one that starts with a vowel(a, e, i, o, u, A, E, I, O, U).
            </summary>
            <returns>integer X mod 10003, here X is number of Amazing Substrings in given string.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.CarryForwardController.EvenSubArrays(System.Int32[])">
            <summary>
            In integer array A, decide whether it is possible to divide the array into 
            one or more subarrays of even length such that first and last element of all subarrays will be even.
            </summary>
            <returns>Return "YES" if it is possible otherwise return "NO" (without quotes).</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.CarryForwardController.LeadersInArray(System.Int32[])">
            <summary>
            In integer array A,  find all the leaders in the array A.
            An element is leader if it is strictly greater than all the elements to its right side.
            </summary>
            <returns>integer array denoting all the leader elements of the array.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.PrefixSumController.MaximumPossibleSum(System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary>
            Given an integer array A of size N.
            You can pick B elements from either left or right end of the array A to get maximum sum.
            Find and return this maximum possible sum
            </summary>
            <returns>Return an integer denoting the maximum possible sum of elements you picked.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.PrefixSumController.RangeSum(System.Int32[],System.Int32[][])">
            <summary>
            You are given an integer array A of length N.
            You are also given a 2D integer array B with dimensions M x 2, where each row denotes a[L, R] query.
            For each query, you have to find the sum of all elements from L to R indices in A (1 - indexed).
            </summary>
            <returns>Return an integer array of length M where ith element is the answer for ith query in B.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.PrefixSumController.EqualIndexedSum(System.Int32[])">
            <summary>
            Given an array, arr[] of size N, the task is to find the count of array indices such that 
            removing an element from these indices makes the sum of even-indexed and odd-indexed array elements equal
            </summary>
            <returns>count of array indices.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.PrefixSumController.EquilibriumIndex(System.Int32[],System.Int32)">
            <summary>
            Find Equilibrium index of an array, that is an index such that 
            the sum of elements at lower indexes is equal to the sum of elements at higher indexes.
            </summary>
            <returns>equilibrium index of the given array. If no such index is found then return -1.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.PrefixSumController.SortColors(System.Int32[])">
            <summary>
            Given an array with n objects colored red, white or blue, 
            sort them so that objects of the same color are adjacent, 
            with the colors in the order red, white and blue
            Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.
            </summary>
            <returns>integer denoting the minimum time to make all elements equal..</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.SubArraysController.MaxSubArraySum(System.Int32[])">
            <summary>
            Find the contiguous non empty subarray within an array, A of length N which has the largest sum
            </summary>
            <returns>Integer representing the maximum possible sum of the contiguous subarray.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.SubArraysController.AllSubarraySum(System.Int32[])">
            <summary>
            In an integer array A find the sum of all subarray sums of A
            </summary>
            <returns>integer denoting the sum of all subarray sums of the given array.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.SubArraysController.LeastSubarrayAverage(System.Int32[],System.Int32)">
            <summary>
            In an integer array A, Find the subarray with least average of size k
            </summary>
            <returns>index of the first element of the subarray of size k that has least average.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.SubArraysController.MaxSubarray(System.Int32,System.Int32[])">
            <summary>
            In integer array C. Find a subarray (contiguous elements) so that 
            the sum of contiguous elements is maximum.
            But the sum must not exceed B
            </summary>
            <returns>Returns count of good subarrays in A.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.SubArraysController.AlternatingSubarray(System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary>
            In array A of 0 and 1's, and an integer B.
            Find all the indices as centre of 2 * B + 1 length 0-1 of alternating subarray.
            Alternating array contains only 0's and 1's, and having no adjacent 0's or 1's.
            </summary>
            <returns>Return an integer array containing indices(0-based) in sorted order. 
            If no such index exists, return an empty integer array.</returns>   
            For e.g.arrays[0, 1, 0, 1], [1, 0] and[1] are 0-1 alternating, while [1, 1] and[0, 1, 0, 0, 1] are not.
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.TwoDimensionalArraysController.SpiralOrderMatrix(System.Int32)">
            <summary>
            Given an integer A, generate a square matrix filled with elements from 1 to A2 in spiral order.
            </summary>
            <returns>IntegerReturn a 2-D matrix which consists of the elements in spiral order.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.TwoDimensionalArraysController.RotateMatrix(System.Collections.Generic.List{System.Collections.Generic.List{System.Int32}})">
            <summary>
            You are given a n x n 2D matrix A representing an image, Rotate the image by 90 degrees 
            </summary>
            <returns>Return the 2D rotated matrix.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.TwoDimensionalArraysController.ZeroRowColumnConvert(System.Int32[][])">
            <summary>
            You are given a n x n 2D matrix input, make all the elements in a row or column zero if the A[i][j] = 0
            </summary>
            <returns>Return the 2D rotated matrix.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.BasicsController.fun(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <returns>.</returns>
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.BitWiseController.SwitchLastHighBit(System.Int32)">
            <summary>
            Switch the least significant high bit in input integer.
            </summary>
            <returns>Binary represenation of input and integer after switching.</returns>
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.BitWiseController.SingleNumber(System.Collections.Generic.List{System.Int32})">
            <summary>
            Given an array of integers A, every element appears twice except for one. Find .
            </summary>
            <returns>Returns that integer that occurs once.</returns>
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.BasicDsaController.PerfectNumber(System.Int32)">
            <summary>
            Perfect number is a positive integer which is equal to the sum of its proper positive divisors.
            Check if input is Perfect or not..
            </summary>
            <returns>true if Perfect Number and false if not.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.BasicDsaController.PerfectSquareRoot(System.Int32)">
            <summary>
            Given a number A. Return square root of the number if it is perfect square otherwise return -1.
            </summary>
            <returns>Perfect square root if exists and -1 if not.</returns>   
        </member>
        <member name="M:CodingProblems.WebApi.Controllers.BasicDsaController.ArmstrongNumber(System.Int32)">
            <summary>
            Armstrong number is a positive integer with sum of cubes of each digit of the number is equal to the number itself.
            Check if input is Armstrong or not..
            </summary>
            <returns>true if Armstrong Number and false if not.</returns>   
        </member>
    </members>
</doc>
